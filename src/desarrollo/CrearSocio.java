/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package desarrollo;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sql.rowset.CachedRowSet;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import logica.CargarCombos;
import logica.DB;
import logica.TomarFoto;
import logica.Utilidades;
import logica.msj;
import net.sf.jcarrierpigeon.WindowPosition;
import net.sf.jtelegraph.Telegraph;
import net.sf.jtelegraph.TelegraphQueue;
import net.sf.jtelegraph.TelegraphType;

/**
 *
 * @author GID
 */
public final class CrearSocio extends javax.swing.JInternalFrame {

    String usuarioSistema = System.getProperty("usuario_sistema");
    private Utilidades utilidades = new Utilidades();
    private TomarFoto tomarFoto = new TomarFoto();
    CargarCombos cargarCombo;
    private DB db = new DB();
    int socioId;
    SimpleDateFormat format = new SimpleDateFormat("dd/MM/YYYY");
    String fotos;
    boolean estadoBD;

    /**
     * Creates new form internalEjemplo
     */
    public CrearSocio() {
        initComponents();
        cargarCombo = new CargarCombos();
        cargarCombo.llenarComboUnidad(cboSexo, "Masculino", "Femenino");
        genererClave(lbCodigo);
        jcEstado.setVisible(false);
        btnCapturarFoto.setVisible(false);
        btnReiniciarBiometria.setVisible(false);
        btnCerrar.setVisible(false);
        this.setResizable(false);
        btnEliminar.setVisible(false);
        lTieneHuella.setVisible(false);
    }
    VerSocio current;

    public CrearSocio(int socioId, VerSocio current) {
        initComponents();
        this.current = current;
        cargarCombo = new CargarCombos();
        cargarCombo.llenarComboUnidad(cboSexo, "Masculino", "Femenino");
        this.socioId = socioId;
        jcEstado.setText("Desactivar");
        jcEstado.setSelected(false);
        lTieneHuella.setVisible(false);
        traerDatosSocio(socioId);
        btnCapturarFoto.setVisible(true);
        btnCerrar.setVisible(false);
        btnEliminar.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        txtPrimerNombre = new javax.swing.JTextField();
        txtPrimerApellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtSegundoNombre = new javax.swing.JTextField();
        txtSegundoApellido = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jdFechaNaci = new com.toedter.calendar.JDateChooser();
        pnContenedorFoto = new javax.swing.JPanel();
        lblFoto = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cboSexo = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        txtIdentificacion = new javax.swing.JTextField();
        lbClave = new javax.swing.JLabel();
        lbCodigo = new javax.swing.JLabel();
        btnCapturarFoto = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lTieneHuella = new javax.swing.JLabel();
        btnReiniciarBiometria = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jcEstado = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtPrimerNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPrimerNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrimerNombreKeyReleased(evt);
            }
        });

        txtPrimerApellido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPrimerApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrimerApellidoKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Primer Nombre");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Segundo Nombre");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Primer Apellido");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Segundo Apellido");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Fecha de Nacimiento");

        txtSegundoNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSegundoNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSegundoNombreKeyReleased(evt);
            }
        });

        txtSegundoApellido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSegundoApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSegundoApellidoKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Teléfono");

        txtTelefono.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyReleased(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/guardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Correo Electrónico");

        txtCorreo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });
        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCorreoKeyReleased(evt);
            }
        });

        jdFechaNaci.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        pnContenedorFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout pnContenedorFotoLayout = new javax.swing.GroupLayout(pnContenedorFoto);
        pnContenedorFoto.setLayout(pnContenedorFotoLayout);
        pnContenedorFotoLayout.setHorizontalGroup(
            pnContenedorFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnContenedorFotoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnContenedorFotoLayout.setVerticalGroup(
            pnContenedorFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnContenedorFotoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Sexo");

        cboSexo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboSexo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboSexoKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Identificación");

        txtIdentificacion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtIdentificacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIdentificacionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdentificacionFocusLost(evt);
            }
        });
        txtIdentificacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdentificacionKeyReleased(evt);
            }
        });

        lbClave.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbClave.setForeground(new java.awt.Color(255, 0, 0));
        lbClave.setText("PIN de Acceso: ");

        lbCodigo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbCodigo.setForeground(new java.awt.Color(255, 0, 0));

        btnCapturarFoto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCapturarFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/foto_capturar.png"))); // NOI18N
        btnCapturarFoto.setToolTipText("Tomar fotografia de perfil para el usuario");
        btnCapturarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapturarFotoActionPerformed(evt);
            }
        });

        btnCerrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/salir.png"))); // NOI18N
        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/caneco.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        lTieneHuella.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lTieneHuella.setForeground(new java.awt.Color(255, 0, 0));
        lTieneHuella.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lTieneHuella.setText("Usuario tiene registro biométrico(Huella Registrada)");

        btnReiniciarBiometria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReiniciarBiometria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/huella_actualizar.png"))); // NOI18N
        btnReiniciarBiometria.setToolTipText("Reiniciar registro biometrico del socio; esto significa que deberá de registrar de nuevo la huella dactilar del socio");
        btnReiniciarBiometria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarBiometriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnContenedorFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCapturarFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReiniciarBiometria, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lTieneHuella, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11)
                            .addComponent(jLabel4)
                            .addComponent(jLabel13)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrimerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdFechaNaci, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel6))
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSegundoApellido, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSegundoNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboSexo, 0, 179, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbClave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCerrar)
                        .addGap(29, 29, 29)
                        .addComponent(btnGuardar)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbClave, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtIdentificacion)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lbCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtSegundoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSegundoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(cboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPrimerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdFechaNaci, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(lTieneHuella, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar))
                        .addGap(23, 23, 23))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel5))
                            .addComponent(pnContenedorFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnReiniciarBiometria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCapturarFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Crear Socio");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/Person-add-black-32.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel3.setText("Permite la creación de un socio (cliente).");

        jcEstado.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 482, Short.MAX_VALUE)
                .addComponent(jcEstado)
                .addGap(107, 107, 107))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcEstado)
                    .addComponent(jLabel3))
                .addGap(124, 124, 124))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdentificacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdentificacionKeyReleased
        utilidades.validarCampoNumericos(txtIdentificacion.getText(), txtIdentificacion);
        if (socioId > 0) {
            if (txtIdentificacion.getText().length() >= 6) {
                utilidades.buscarIdentificacion(txtIdentificacion.getText(), "activo", "socio", socioId, txtIdentificacion);
            }
        }
    }//GEN-LAST:event_txtIdentificacionKeyReleased

    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            boolean validacion = utilidades.validarFechaRegistro(utilidades.fecha_apertura(), utilidades.obtnerFechaActual());

            if (validacion == false) {
                JOptionPane.showMessageDialog(this, "NO SE HA CREADO EL SOCIO", "REGISTRANDO SOCIO", JOptionPane.WARNING_MESSAGE);
                Telegraph tele = new Telegraph("Cierre Caja", "No se puede crear el socio. \n La fecha actual es menor que la fecha de apertura", TelegraphType.NOTIFICATION_WARNING, WindowPosition.TOPRIGHT, 9000);
                TelegraphQueue q = new TelegraphQueue();
                q.add(tele);
            } else {
                guardarSocio();
            }
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarEgreso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtTelefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyReleased
        utilidades.validarCampoNumericos(txtTelefono.getText(), txtTelefono);
    }//GEN-LAST:event_txtTelefonoKeyReleased

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void txtSegundoApellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSegundoApellidoKeyReleased
        utilidades.validarCamposTexto(txtSegundoApellido.getText(), txtSegundoApellido);
        txtSegundoApellido.setText(utilidades.formatearCadena(txtSegundoApellido.getText()));
        
    }//GEN-LAST:event_txtSegundoApellidoKeyReleased

    private void txtSegundoNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSegundoNombreKeyReleased
        utilidades.validarCamposTexto(txtSegundoNombre.getText(), txtSegundoNombre);
        txtSegundoNombre.setText(utilidades.formatearCadena(txtSegundoNombre.getText()));
    }//GEN-LAST:event_txtSegundoNombreKeyReleased

    private void txtPrimerApellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrimerApellidoKeyReleased
        utilidades.validarCamposTexto(txtPrimerApellido.getText(), txtPrimerApellido);
        txtPrimerApellido.setText(utilidades.formatearCadena(txtPrimerApellido.getText()));
    }//GEN-LAST:event_txtPrimerApellidoKeyReleased

    private void txtPrimerNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrimerNombreKeyReleased
        utilidades.validarCamposTexto(txtPrimerNombre.getText(), txtPrimerNombre);
        txtPrimerNombre.setText(utilidades.formatearCadena(txtPrimerNombre.getText()));
    }//GEN-LAST:event_txtPrimerNombreKeyReleased

    private void txtIdentificacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdentificacionFocusLost
        if (socioId == 0) {
            if (txtIdentificacion.getText().length() > 0) {
                utilidades.buscarIdentificacion(txtIdentificacion.getText(), "activo", "socio", 0, txtIdentificacion);
            }
        }

    }//GEN-LAST:event_txtIdentificacionFocusLost

    private void txtIdentificacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdentificacionFocusGained
    }//GEN-LAST:event_txtIdentificacionFocusGained

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnCapturarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapturarFotoActionPerformed

        tomarFoto.setLbFoto(lblFoto);
        tomarFoto.setTabla("socio");
        tomarFoto.tomarFoto(lbCodigo.getText());

    }//GEN-LAST:event_btnCapturarFotoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        verificarPagoMembresia(socioId);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnReiniciarBiometriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarBiometriaActionPerformed
        //Preguntar antes de borrar registro biometrico
        int proceder = JOptionPane.showConfirmDialog(this, "¿Confirma el reinicio de la huella dactilar del socio?", "Reinicio registro biometrico", JOptionPane.YES_NO_OPTION);
        if (proceder == 0) {
            System.out.println("Se procede a borrar huella ...");
            String querySQL = String.format("UPDATE socio SET fingerprint = null WHERE id = %s", socioId);
            if (db.sqlEjec(querySQL)) {
                msj.show("Huella borrada", "Se ha reiniciado el registro de huella del socio, no olvide volver a realizar el registro biometrico", TelegraphType.NOTIFICATION_INFO);
                traerDatosSocio(socioId);
            }
        }

    }//GEN-LAST:event_btnReiniciarBiometriaActionPerformed

    private void cboSexoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboSexoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            guardarSocio();
        }
    }//GEN-LAST:event_cboSexoKeyPressed

    private void txtCorreoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyReleased
        txtCorreo.setText(utilidades.formatearCadena(txtCorreo.getText()));
    }//GEN-LAST:event_txtCorreoKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapturarFoto;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnReiniciarBiometria;
    private javax.swing.JComboBox cboSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JCheckBox jcEstado;
    private com.toedter.calendar.JDateChooser jdFechaNaci;
    private javax.swing.JLabel lTieneHuella;
    private javax.swing.JLabel lbClave;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JPanel pnContenedorFoto;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtIdentificacion;
    private javax.swing.JTextField txtPrimerApellido;
    private javax.swing.JTextField txtPrimerNombre;
    private javax.swing.JTextField txtSegundoApellido;
    private javax.swing.JTextField txtSegundoNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    public void genererClave(JLabel lbClave) {
        Random random = new Random();
        int numeroClave = random.nextInt(9000) + 1000;
        CachedRowSet data;
        String querySQL = String.format("SELECT clave FROM socio WHERE clave = '%s'", String.valueOf(numeroClave));
        data = db.sqlDatos(querySQL);
        try {
            if (!data.next()) {
                lbCodigo.setText(String.valueOf(numeroClave));
            } else {
                numeroClave = random.nextInt(9000) + 1000;
                data = db.sqlDatos(querySQL);
                lbCodigo.setText(String.valueOf(numeroClave));
            }
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarPagoMembresia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void traerDatosSocio(int idSocio) {
        CachedRowSet data;
        String querySQL = String.format("SELECT activo,clave,identificacion,primer_nombre,segundo_nombre,primer_apellido,segundo_apellido,fecha_nacimiento,email,telefono,sexo,foto,fingerprint,"
                + "CASE WHEN mano_registro_huella IS NULL THEN 'No Registra' WHEN mano_registro_huella IS NOT NULL THEN mano_registro_huella::text END AS mano,\n"
                + "CASE WHEN dedo_registro_huella IS NULL THEN 'No Registra' WHEN dedo_registro_huella IS NOT NULL THEN dedo_registro_huella::text END AS dedo \n"
                + "FROM socio	\n"
                + "WHERE id=%s\n"
                + "AND activo=(SELECT activo FROM socio WHERE id=%s);", idSocio, idSocio);
        data = db.sqlDatos(querySQL);
        try {
            while (data.next()) {
                estadoBD = data.getBoolean("activo");
                if (data.getBoolean("activo") == true) {
                    jcEstado.setText("Desactivar");
                } else {
                    jcEstado.setText("Activar");
                }
                lbCodigo.setText(data.getString("clave"));
                txtIdentificacion.setText(data.getString("identificacion"));
                txtPrimerNombre.setText(data.getString("primer_nombre"));
                txtSegundoNombre.setText(data.getString("segundo_nombre"));
                txtPrimerApellido.setText(data.getString("primer_apellido"));
                txtSegundoApellido.setText(data.getString("segundo_apellido"));
                Date fechaNacimiento = data.getDate("fecha_nacimiento");
                if (fechaNacimiento != null) {
                    jdFechaNaci.setDate(fechaNacimiento);
                }
                txtCorreo.setText(data.getString("email"));
                cboSexo.setSelectedItem(data.getString("sexo"));
                if (data.getBytes("foto") != null) {
                    ImageIcon foto = new ImageIcon(data.getBytes("foto"));
                    lblFoto.setIcon(foto);
                }
                txtTelefono.setText(data.getString("telefono"));

                if (data.getBytes("fingerprint") != null) {
                    lTieneHuella.setText("Usuario con Huella Registrada: Mano " + data.getString("mano") + " - Dedo " + data.getString("dedo") + "");
                    utilidades.resaltarTexto(lTieneHuella, "verde");
                    btnReiniciarBiometria.setVisible(true);
                } else {
                    lTieneHuella.setText("Usuario no tiene aun registrada la huella");
                    utilidades.resaltarTexto(lTieneHuella, "rojo");
                    btnReiniciarBiometria.setVisible(false);
                }
                //Mostrar mensaje con informacion de huella
                lTieneHuella.setVisible(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CrearSocio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void guardarSocio() {
        String primerNombre = txtPrimerNombre.getText().trim();
        String segundoNombre = txtSegundoNombre.getText().trim();
        String primerApellido = txtPrimerApellido.getText().trim();
        String segundoApellido = txtSegundoApellido.getText().trim();
        String clave = lbCodigo.getText();
        String email = txtCorreo.getText().trim();
        String telefono = txtTelefono.getText().trim();
        String querySQL;
        boolean success;
        boolean estado;
        if (jcEstado.getText().contains("Des")) {
            estado = jcEstado.isSelected();
            if (estado == true) {
                estado = false;
            } else {
                estado = estadoBD;
            }
        } else {
            estado = jcEstado.isSelected();
            if (estado == true) {
                estado = true;
            } else {
                estado = estadoBD;
            }
        }
        Date fechaNaci = jdFechaNaci.getDate();
        String fechaNacimiento = "NULL";
        if (fechaNaci != null) {
            fechaNacimiento = "'" + format.format(fechaNaci) + "'";
        }
        String identificacion = txtIdentificacion.getText();
        String sexo = String.valueOf(cboSexo.getSelectedItem());
        if (!txtPrimerNombre.getText().isEmpty()) {
            if (!txtPrimerApellido.getText().isEmpty()) {
                if (!cboSexo.getSelectedItem().toString().isEmpty()) {
                    if (socioId > 0) {
                        querySQL = String.format("UPDATE socio SET identificacion='%s',primer_nombre='%s',segundo_nombre='%s',primer_apellido='%s',segundo_apellido='%s',fecha_nacimiento=%s,telefono='%s',email='%s',sexo='%s', activo=%s WHERE id=%s", identificacion, primerNombre, segundoNombre, primerApellido, segundoApellido, fechaNacimiento, telefono, email, sexo, estado, socioId);
                        success = db.sqlEjec(querySQL);
                        if (success) {
                            this.dispose();
                            current.updateDatos();
                            Telegraph tele = new Telegraph("Socio Actualizado", "Se ha actualizado Correctamente el Socio", TelegraphType.NOTIFICATION_ADD, WindowPosition.TOPRIGHT, 9000);
                            TelegraphQueue q = new TelegraphQueue();
                            q.add(tele);
                        }
                    } else {
                        querySQL = String.format("INSERT INTO socio(usuario_sistema_id,clave,identificacion,primer_nombre,segundo_nombre,primer_apellido,segundo_apellido,fecha_nacimiento,telefono,email,sexo,activo,foto,fecha_registro) VALUES (%s,'%s','%s','%s','%s','%s','%s',%s,'%s','%s','%s',TRUE,%s,now())", Integer.valueOf(usuarioSistema), clave, identificacion, primerNombre, segundoNombre, primerApellido, segundoApellido, fechaNacimiento, telefono, email, sexo, fotos);
                        success = db.sqlEjec(querySQL);
                        if (success) {
                            txtPrimerNombre.requestFocus(false);
                            btnGuardar.setVisible(false);
                            btnCerrar.setVisible(true);
                            int capturarFoto = JOptionPane.showConfirmDialog(this, "¿Desea Capturar la Foto?", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                            if (capturarFoto == JOptionPane.OK_OPTION) {
                                tomarFoto.setLbFoto(lblFoto);
                                tomarFoto.setTabla("socio");
                                tomarFoto.tomarFoto(lbCodigo.getText());

                            } else {
                                Telegraph tele = new Telegraph("Socio Registrado", "Se ha registrado Correctamente el Socio", TelegraphType.NOTIFICATION_ADD, WindowPosition.TOPRIGHT, 9000);
                                TelegraphQueue q = new TelegraphQueue();
                                q.add(tele);
                                this.dispose();
                                //Enviar clave al portapapeles
                                Utilidades.enviarPortapales(clave);
                            }
                        }
                    }
                } else {
                    utilidades.llamarMensaje("Sexo");
                }
            } else {
                utilidades.llamarMensaje("Primer Apellido");
            }
        } else {
            utilidades.llamarMensaje("Primer Nombre");
        }
    }

    public void verificarPagoMembresia(int idSocio) {
        String querySQL;
        CachedRowSet data;
        querySQL = String.format("SELECT COUNT(pm.id) AS pagos\n"
                + "FROM pago_membresia pm, membresia_usuario mu\n"
                + "WHERE pm.socio_id=%s\n"
                + "AND mu.socio_id =%s", idSocio, idSocio);
        data = db.sqlDatos(querySQL);
        try {
            while (data.next()) {
                if (data.getInt("pagos") <= 1) {
                    querySQL = String.format("DELETE FROM socio WHERE socio.id=%s", idSocio);
                    data = db.sqlDatos(querySQL);
                    Telegraph tele = new Telegraph("Socio Eliminado con Exito", "El socio ha sido eliminado con exito", TelegraphType.NOTIFICATION_INFO, WindowPosition.TOPRIGHT, 5000);
                    TelegraphQueue q = new TelegraphQueue();
                    q.add(tele);
                    this.dispose();
                    current.dispose();
                } else {
                    Telegraph tele = new Telegraph("No se Puede Eliminar el socio", "El socio no se puede eliminar por que presenta pagos", TelegraphType.NOTIFICATION_WARNING, WindowPosition.TOPRIGHT, 5000);
                    TelegraphQueue q = new TelegraphQueue();
                    q.add(tele);
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(CrearSocio.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
