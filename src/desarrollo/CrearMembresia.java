/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package desarrollo;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sql.rowset.CachedRowSet;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import logica.CargarCombos;
import logica.DB;
import logica.Utilidades;
import net.sf.jcarrierpigeon.WindowPosition;
import net.sf.jtelegraph.Telegraph;
import net.sf.jtelegraph.TelegraphQueue;
import net.sf.jtelegraph.TelegraphType;

/**
 *
 * @author GID
 */
public final class CrearMembresia extends javax.swing.JInternalFrame {

    private final DB db = new DB();
    private final Utilidades utilidades = new Utilidades();
    CargarCombos cargarCombo;
    DefaultListModel modelo = new DefaultListModel();
    SimpleDateFormat format = new SimpleDateFormat("dd/MM/YYYY");
    String usuarioSistemas = System.getProperty("usuario_sistema");
    String horaInicio;
    String horario;
    String horaFin;
    String horario2;
    String restriccion;
    String querySQL;
    String clave;
    int idRegistro;
    String nombreMembresia;
    Double valorMembresia;
    ArrayList<String> horasRestriccion = new ArrayList<>();
    private AdministrarMembresia parent;
    boolean estadoBD;

    /**
     * Creates new form internalEjemplo
     *
     * @param id
     * @param parent
     */
    /*se utiliza para editar por que trae todos los datos*/
    public CrearMembresia(String id, AdministrarMembresia parent) {
        initComponents();
        this.parent = parent;
        txtNombreMembresia.requestFocus();
        cargarCombo = new CargarCombos();
        cargarCombo.llenarCombo(cboDuracion, 100);
        cargarCombo.llenarCombo(cboLimiteDias, 5);
        cargarCombo.llenarComboUnidad(cboUnidad);
        cargarCombo.horas(cboHora1);
        cargarCombo.horas(cboHora2);
        jdExpiracion.setVisible(false);
        txtCantidadDias.setEditable(false);
        cbActivar.setVisible(false);
        clave = id;
        traerDatos(clave);
        txtValor.setEditable(false);
        jLabel1.setText("Editar Membresias");

    }

    /*se utiliza para giuardar desde la interfaz de administrar membresia*/
    public CrearMembresia(AdministrarMembresia parent) {
        initComponents();
        this.parent = parent;
        txtNombreMembresia.requestFocus();
        cargarCombo = new CargarCombos();
        cargarCombo.llenarCombo(cboDuracion, 100);
        cargarCombo.llenarCombo(cboLimiteDias, 5);
        cargarCombo.llenarComboUnidad(cboUnidad);
        cargarCombo.horas(cboHora1);
        cargarCombo.horas(cboHora2);
        rNo.setSelected(true);
        rNo1.setSelected(true);
        rNo2.setSelected(true);
        rNo3.setSelected(true);
        jdExpiracion.setVisible(false);
        txtCantidadDias.setEditable(false);
        cbActivar.setVisible(false);
        

    }

    /*se utiliza para giuardar */
    public CrearMembresia() {
        initComponents();
        txtNombreMembresia.requestFocus();
        cargarCombo = new CargarCombos();
        cargarCombo.llenarCombo(cboDuracion, 100);
        cargarCombo.llenarCombo(cboLimiteDias, 5);
        cargarCombo.llenarComboUnidad(cboUnidad);
        cargarCombo.horas(cboHora1);
        cargarCombo.horas(cboHora2);
        rNo.setSelected(true);
        rNo1.setSelected(true);
        rNo2.setSelected(true);
        rNo3.setSelected(true);
        jdExpiracion.setVisible(false);
        txtCantidadDias.setEditable(false);
        cbActivar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoVisitasPorDia = new javax.swing.ButtonGroup();
        grupoDiasIngreso = new javax.swing.ButtonGroup();
        grupoHorariosIngreso = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtNombreMembresia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cboDuracion = new javax.swing.JComboBox();
        cboUnidad = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        rNo = new javax.swing.JRadioButton();
        cboLimiteDias = new javax.swing.JComboBox();
        rSi = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        rNo1 = new javax.swing.JRadioButton();
        rSi1 = new javax.swing.JRadioButton();
        paneDiasSemana = new javax.swing.JPanel();
        cSabado = new javax.swing.JCheckBox();
        cMiercoles = new javax.swing.JCheckBox();
        cMartes = new javax.swing.JCheckBox();
        cViernes = new javax.swing.JCheckBox();
        cLunes = new javax.swing.JCheckBox();
        cJueves = new javax.swing.JCheckBox();
        cDomingo = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        rNo2 = new javax.swing.JRadioButton();
        rsi2 = new javax.swing.JRadioButton();
        de = new javax.swing.JLabel();
        cboHora1 = new javax.swing.JComboBox();
        a = new javax.swing.JLabel();
        cboHora2 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLista = new javax.swing.JList();
        jLabel11 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        btnAgregar = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        rbCantidadDias = new javax.swing.JRadioButton();
        txtCantidadDias = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        rNo3 = new javax.swing.JRadioButton();
        rSi3 = new javax.swing.JRadioButton();
        jdExpiracion = new com.toedter.calendar.JDateChooser();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbActivar = new javax.swing.JCheckBox();
        btnGuardar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Nombre");

        txtNombreMembresia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtNombreMembresia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreMembresiaActionPerformed(evt);
            }
        });
        txtNombreMembresia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreMembresiaKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Duración");

        cboDuracion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cboUnidad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("¿Se limitarán las visitas por día?");

        grupoVisitasPorDia.add(rNo);
        rNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rNo.setText("No");
        rNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rNoActionPerformed(evt);
            }
        });

        cboLimiteDias.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboLimiteDias.setEnabled(false);
        cboLimiteDias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLimiteDiasActionPerformed(evt);
            }
        });

        grupoVisitasPorDia.add(rSi);
        rSi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rSi.setText("Si");
        rSi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rSiItemStateChanged(evt);
            }
        });
        rSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSiActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("¿Se limitarán los días de ingreso?");

        grupoDiasIngreso.add(rNo1);
        rNo1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rNo1.setText("No");
        rNo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rNo1ActionPerformed(evt);
            }
        });

        grupoDiasIngreso.add(rSi1);
        rSi1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rSi1.setText("Si");
        rSi1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rSi1ItemStateChanged(evt);
            }
        });
        rSi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSi1ActionPerformed(evt);
            }
        });

        paneDiasSemana.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cSabado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cSabado.setText("Sábado");
        cSabado.setEnabled(false);

        cMiercoles.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cMiercoles.setText("Miércoles");
        cMiercoles.setEnabled(false);

        cMartes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cMartes.setText("Martes");
        cMartes.setEnabled(false);

        cViernes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cViernes.setText("Viernes");
        cViernes.setEnabled(false);
        cViernes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cViernesActionPerformed(evt);
            }
        });

        cLunes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cLunes.setText("Lunes");
        cLunes.setEnabled(false);

        cJueves.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cJueves.setText("Jueves");
        cJueves.setEnabled(false);

        cDomingo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cDomingo.setText("Domingo");
        cDomingo.setEnabled(false);

        javax.swing.GroupLayout paneDiasSemanaLayout = new javax.swing.GroupLayout(paneDiasSemana);
        paneDiasSemana.setLayout(paneDiasSemanaLayout);
        paneDiasSemanaLayout.setHorizontalGroup(
            paneDiasSemanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneDiasSemanaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneDiasSemanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cDomingo)
                    .addGroup(paneDiasSemanaLayout.createSequentialGroup()
                        .addGroup(paneDiasSemanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cLunes)
                            .addComponent(cJueves))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(paneDiasSemanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cMartes)
                            .addComponent(cViernes))
                        .addGap(12, 12, 12)
                        .addGroup(paneDiasSemanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cSabado)
                            .addComponent(cMiercoles))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paneDiasSemanaLayout.setVerticalGroup(
            paneDiasSemanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneDiasSemanaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneDiasSemanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cLunes)
                    .addComponent(cMartes)
                    .addComponent(cMiercoles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneDiasSemanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cJueves)
                    .addComponent(cViernes)
                    .addComponent(cSabado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cDomingo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("¿Se limitarán los horarios de ingreso?");

        grupoHorariosIngreso.add(rNo2);
        rNo2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rNo2.setText("No");
        rNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rNo2ActionPerformed(evt);
            }
        });

        grupoHorariosIngreso.add(rsi2);
        rsi2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rsi2.setText("Si");
        rsi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rsi2ActionPerformed(evt);
            }
        });

        de.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        de.setText("De");
        de.setEnabled(false);

        cboHora1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboHora1.setEnabled(false);

        a.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a.setText("A");
        a.setEnabled(false);

        cboHora2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboHora2.setEnabled(false);

        jLista.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(jLista);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Costo Membresía");

        txtValor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorActionPerformed(evt);
            }
        });
        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValorKeyReleased(evt);
            }
        });

        btnAgregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAgregar.setText("+");
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnQuitar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnQuitar.setText("-");
        btnQuitar.setEnabled(false);
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        grupoDiasIngreso.add(rbCantidadDias);
        rbCantidadDias.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbCantidadDias.setText("Cantidad Dias");
        rbCantidadDias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCantidadDiasActionPerformed(evt);
            }
        });

        txtCantidadDias.setEditable(false);
        txtCantidadDias.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCantidadDias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantidadDiasKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("¿Es Promocional Esta Membresia?");

        buttonGroup1.add(rNo3);
        rNo3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rNo3.setText("No");
        rNo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rNo3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rSi3);
        rSi3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rSi3.setText("Si, Esta promoción vence:");
        rSi3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSi3ActionPerformed(evt);
            }
        });

        jdExpiracion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cboDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rNo3)
                                        .addGap(18, 18, 18)
                                        .addComponent(rSi3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jdExpiracion, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rNo2)
                                        .addGap(18, 18, 18)
                                        .addComponent(rsi2)
                                        .addGap(26, 26, 26)
                                        .addComponent(de)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cboHora1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(a)
                                        .addGap(18, 18, 18)
                                        .addComponent(cboHora2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(txtNombreMembresia)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rNo)
                                        .addGap(18, 18, 18)
                                        .addComponent(rSi)
                                        .addGap(32, 32, 32)
                                        .addComponent(cboLimiteDias, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rNo1)
                                        .addGap(18, 18, 18)
                                        .addComponent(rSi1)
                                        .addGap(10, 10, 10)
                                        .addComponent(rbCantidadDias)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCantidadDias, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(24, 24, 24)
                                .addComponent(paneDiasSemana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(466, 466, 466)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombreMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(a)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rNo2)
                                .addComponent(cboHora1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rsi2)
                                .addComponent(btnAgregar)
                                .addComponent(btnQuitar)
                                .addComponent(de)
                                .addComponent(cboHora2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(rNo3)
                                .addComponent(rSi3))
                            .addComponent(jdExpiracion, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rNo)
                                    .addComponent(rSi)
                                    .addComponent(cboLimiteDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCantidadDias, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(rNo1)
                                        .addComponent(rSi1)
                                        .addComponent(rbCantidadDias))))
                            .addComponent(paneDiasSemana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Crear Membresía");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/Group-32.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel3.setText("Permite crear un nuevo plan o membresía.");

        cbActivar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbActivarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbActivar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbActivar)
                    .addComponent(jLabel3))
                .addGap(124, 124, 124))
        );

        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/guardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(990, 990, 990)
                        .addComponent(btnGuardar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreMembresiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreMembresiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreMembresiaActionPerformed

    private void cboLimiteDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLimiteDiasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboLimiteDiasActionPerformed

    private void rSiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rSiItemStateChanged
    }//GEN-LAST:event_rSiItemStateChanged

    private void rSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSiActionPerformed
        cboLimiteDias.setEnabled(true);
    }//GEN-LAST:event_rSiActionPerformed

    private void rNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rNoActionPerformed
        cboLimiteDias.setEnabled(false);
        cboLimiteDias.setSelectedItem("");
    }//GEN-LAST:event_rNoActionPerformed

    private void rNo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rNo1ActionPerformed
        limitesDiasIngreso(false);
        txtCantidadDias.setText("");
        limitesDiasIngresoInvisble(false);
    }//GEN-LAST:event_rNo1ActionPerformed

    private void rSi1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rSi1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rSi1ItemStateChanged

    private void rSi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSi1ActionPerformed
        limitesDiasIngreso(true);
        txtCantidadDias.setText("");
        txtCantidadDias.setEditable(false);
    }//GEN-LAST:event_rSi1ActionPerformed

    private void cViernesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cViernesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cViernesActionPerformed

    private void txtValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorActionPerformed

    private void rsi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rsi2ActionPerformed
        limitesHorariosIngreso(true);
    }//GEN-LAST:event_rsi2ActionPerformed

    private void rNo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rNo2ActionPerformed
        limitesHorariosIngreso(false);
        modelo.removeAllElements();
    }//GEN-LAST:event_rNo2ActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        horaInicio = String.valueOf(cboHora1.getSelectedItem());
        horaFin = String.valueOf(cboHora2.getSelectedItem());
        restriccion = horaInicio + "-" + horaFin;

        if ((cboHora1.getSelectedIndex() < cboHora2.getSelectedIndex())) {
            if (!horasRestriccion.contains(horaInicio) || !horasRestriccion.contains(horaFin)) {
                modelo.addElement(restriccion);
                jLista.setModel(modelo);
                horasRestriccion.add(horaInicio);
                horasRestriccion.add(horaFin);
            }
        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtNombreMembresiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreMembresiaKeyReleased
        txtNombreMembresia.setText(utilidades.formatearCadena(txtNombreMembresia.getText()));
    }//GEN-LAST:event_txtNombreMembresiaKeyReleased

    private void txtValorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyReleased
        utilidades.validarCampoNumericos(txtValor.getText(), txtValor);
    }//GEN-LAST:event_txtValorKeyReleased

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        int itemRemover = jLista.getSelectedIndex();
        if (itemRemover >= 0) {
            modelo.remove(itemRemover);
        }
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void rbCantidadDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCantidadDiasActionPerformed
        limitesDiasIngreso(false);
        txtCantidadDias.setEditable(true);
        txtCantidadDias.requestFocus();
        limitesDiasIngresoInvisble(false);
    }//GEN-LAST:event_rbCantidadDiasActionPerformed

    private void txtCantidadDiasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadDiasKeyReleased
        utilidades.validarCampoNumericos(txtCantidadDias.getText(), txtCantidadDias, 1);
        if (txtCantidadDias.getText().contains("0")) {
            String borraUno = txtCantidadDias.getText().substring(0, txtCantidadDias.getText().length() - 1);
            txtCantidadDias.setText(borraUno);
        }
    }//GEN-LAST:event_txtCantidadDiasKeyReleased

    private void rSi3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSi3ActionPerformed
        jdExpiracion.setVisible(true);
        sumarMes();
    }//GEN-LAST:event_rSi3ActionPerformed

    private void rNo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rNo3ActionPerformed
        jdExpiracion.setVisible(false);
    }//GEN-LAST:event_rNo3ActionPerformed

    private void cbActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbActivarActionPerformed
    }//GEN-LAST:event_cbActivarActionPerformed

    private void txtValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            guardar();
        }
    }//GEN-LAST:event_txtValorKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel a;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnQuitar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cDomingo;
    private javax.swing.JCheckBox cJueves;
    private javax.swing.JCheckBox cLunes;
    private javax.swing.JCheckBox cMartes;
    private javax.swing.JCheckBox cMiercoles;
    private javax.swing.JCheckBox cSabado;
    private javax.swing.JCheckBox cViernes;
    private javax.swing.JCheckBox cbActivar;
    private javax.swing.JComboBox cboDuracion;
    private javax.swing.JComboBox cboHora1;
    private javax.swing.JComboBox cboHora2;
    private javax.swing.JComboBox cboLimiteDias;
    private javax.swing.JComboBox cboUnidad;
    private javax.swing.JLabel de;
    private javax.swing.ButtonGroup grupoDiasIngreso;
    private javax.swing.ButtonGroup grupoHorariosIngreso;
    private javax.swing.ButtonGroup grupoVisitasPorDia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jLista;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private com.toedter.calendar.JDateChooser jdExpiracion;
    private javax.swing.JPanel paneDiasSemana;
    private javax.swing.JRadioButton rNo;
    private javax.swing.JRadioButton rNo1;
    private javax.swing.JRadioButton rNo2;
    private javax.swing.JRadioButton rNo3;
    private javax.swing.JRadioButton rSi;
    private javax.swing.JRadioButton rSi1;
    private javax.swing.JRadioButton rSi3;
    private javax.swing.JRadioButton rbCantidadDias;
    private javax.swing.JRadioButton rsi2;
    private javax.swing.JTextField txtCantidadDias;
    private javax.swing.JTextField txtNombreMembresia;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

    public void guardar() {
        int tamanoValor = txtValor.getText().length();

        if (tamanoValor <= 10) {
            try {
                int asistencia_diaria = 40;
                int duracion;
                String unidad;
                boolean actualizar;
                boolean insercion = false;
                boolean insercionDos = true;
                boolean insercionTres = true;
                boolean insercionCuatro = true;
                boolean lun = cLunes.isSelected();
                boolean mar = cMartes.isSelected();
                boolean mie = cMiercoles.isSelected();
                boolean jue = cJueves.isSelected();
                boolean vie = cViernes.isSelected();
                boolean sab = cSabado.isSelected();
                boolean estado;
                if (cbActivar.isSelected()) {
                    estado = true;
                } else {
                    estado = estadoBD;
                }
                if (tipoPuerta() == -1) {
                    Telegraph tele = new Telegraph("Membresia no registrada", "No se ha podido registrar la membresía.\nConfigure el tipo de puerta.", TelegraphType.NOTIFICATION_ERROR, WindowPosition.TOPRIGHT, 5000);
                    TelegraphQueue q = new TelegraphQueue();
                    q.add(tele);
                    return;
                }
                nombreMembresia = txtNombreMembresia.getText();
                if (!nombreMembresia.isEmpty()) {
                    if (!txtValor.getText().isEmpty()) {
                        valorMembresia = Double.valueOf(txtValor.getText());
                        if ((!cboDuracion.getSelectedItem().toString().isEmpty()) && (!cboUnidad.getSelectedItem().toString().isEmpty())) {
                            duracion = Integer.valueOf(cboDuracion.getSelectedItem().toString());
                            unidad = cboUnidad.getSelectedItem().toString();
                            if ((rSi.isSelected() && !cboLimiteDias.getSelectedItem().toString().isEmpty()) || (rNo.isSelected())) {
                                if (rSi.isSelected()) {
                                    try {
                                        String asistencia = String.valueOf(cboLimiteDias.getSelectedItem());
                                        asistencia_diaria = Integer.valueOf(asistencia) * tipoPuerta(); // entrada y salida
                                    } catch (SQLException ex) {
                                        Logger.getLogger(CrearMembresia.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                                System.out.println(clave+" esta es la clave ");
                                if (clave != null) {
                                    querySQL = String.format("UPDATE membresia SET nombre='%s',valor=%s,asistencia_diaria=%s,estado=%s WHERE id=%s", nombreMembresia, valorMembresia, asistencia_diaria, estado, clave);
                                    actualizar = db.sqlEjec(querySQL);
                                    if (actualizar) {
                                        parent.obtenerMembresias(true);
                                        this.dispose();
                                        Telegraph tele = new Telegraph("Membresia Actuliazada", "Se ha actulizado Correctamente la Membresia", TelegraphType.NOTIFICATION_INFO, WindowPosition.TOPRIGHT, 5000);
                                        TelegraphQueue q = new TelegraphQueue();
                                        q.add(tele);
                                        return;
                                    }
                                } else {
                                    querySQL = String.format("INSERT INTO membresia(usuario_sistema_id,nombre,valor,asistencia_diaria,estado,fecha_registro) VALUES (%s,'%s',%s,%s,TRUE,now())", usuarioSistemas, nombreMembresia, valorMembresia, asistencia_diaria);
                                    insercion = db.sqlEjec(querySQL);
                                    idRegistro = db.getKeys();
                                    querySQL = String.format("INSERT INTO membresia_duracion(usuario_sistema_id,membresia_id,duracion,unidad,fecha_registro) VALUES (%s,%s,%s,'%s',now())", usuarioSistemas, idRegistro, duracion, unidad);
                                    db.sqlEjec(querySQL);
                                }
                            } else {
                                utilidades.llamarMensaje("Limite Dias");
                            }
                        } else {
                            utilidades.llamarMensaje("Duracion");
                        }
                    } else {
                        utilidades.llamarMensaje("Valor");
                    }
                } else {
                    utilidades.llamarMensaje("Nombre");
                }

                if (rSi1.isSelected()) {
                    if ((cLunes.isSelected()) || (cMartes.isSelected()) || (cMiercoles.isSelected()) || (cJueves.isSelected()) || (cViernes.isSelected()) || (cSabado.isSelected())) {
                        if (insercion == true) {
                            querySQL = String.format("INSERT INTO membresia_restriccion_semana(membresia_id,usuario_sistema_id,cantidad_dias,lun,mar,mie,jue,vie,sab,fecha_registro) VALUES (%s,%s,-1,%s,%s,%s,%s,%s,%s,now())", idRegistro, usuarioSistemas, lun, mar, mie, jue, vie, sab);
                            insercionDos = db.sqlEjec(querySQL);
                        }
                    } else {
                        utilidades.llamarMensaje();
                    }
                } else if (rbCantidadDias.isSelected()) {
                    if ((!txtCantidadDias.getText().isEmpty())) {
                        int cantidad = Integer.valueOf(txtCantidadDias.getText());
                        if (cantidad > 0) {
                            querySQL = String.format("INSERT INTO membresia_restriccion_semana(membresia_id,usuario_sistema_id,cantidad_dias,lun,mar,mie,jue,vie,sab,fecha_registro) VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,now())", idRegistro, usuarioSistemas, cantidad, lun, mar, mie, jue, vie, sab);
                            insercionDos = db.sqlEjec(querySQL);
                        }
                    } else {
                        utilidades.llamarMensaje("Cantidad Dias");
                    }
                }

                if (rsi2.isSelected()) {
                    if ((!cboHora1.getSelectedItem().toString().isEmpty()) && ((!cboHora2.getSelectedItem().toString().isEmpty()))) {
                        for (int i = 0; i < horasRestriccion.size(); i++) {
                            if (i % 2 != 0) {
                                if (insercion == true) {
                                    querySQL = String.format("INSERT INTO membresia_restriccion_horario(membresia_id,usuario_sistema_id,hora_inicio,hora_fin,fecha_registro) VALUES (%s,%s,'%s','%s',now())", idRegistro, usuarioSistemas, horasRestriccion.get(i - 1), horasRestriccion.get(i));
                                    insercionTres = db.sqlEjec(querySQL);
                                }
                            }
                        }
                    }
                }
                if (rSi3.isSelected()) {
                    Date fecha = jdExpiracion.getDate();
                    String fechaCadena = format.format(fecha);
                    querySQL = String.format("INSERT INTO membresia_promocional(membresia_id,usuario_sistema_id,fecha_expiracion,fecha_registro) VALUES (%s,%s,'%s',now())", idRegistro, usuarioSistemas, fechaCadena);
                    insercionCuatro = db.sqlEjec(querySQL);
                }

                if (insercion && insercionDos && insercionTres && insercionCuatro) {
                    if (parent != null) {
                        parent.obtenerMembresias(true);
                    }
                    this.dispose();
                    Telegraph tele = new Telegraph("Membresia Registrada", "Se ha registrado Correctamente la Membresia", TelegraphType.NOTIFICATION_ADD, WindowPosition.TOPRIGHT, 5000);
                    TelegraphQueue q = new TelegraphQueue();
                    q.add(tele);
                    System.out.println("Se registro la membresia");
                }
            } catch (SQLException ex) {
                Logger.getLogger(CrearMembresia.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            Telegraph tele = new Telegraph("REGISTRO MEMBRESIA", "NO SE HA PODIDO CREAR LA MEMBRESIA \n HA SOBREPASASO EL VALOR DE PAGO DE LA MEMBRESIA", TelegraphType.NOTIFICATION_ERROR, WindowPosition.TOPRIGHT, 5000);
            TelegraphQueue q = new TelegraphQueue();
            q.add(tele);
        }
    }

    public void limitesHorariosIngreso(boolean visibilidad) { // Éste método permite activar y desactivar los controles de los radio botones (si y no)
        cboHora1.setEnabled(visibilidad);
        cboHora2.setEnabled(visibilidad);
        cboHora1.setSelectedItem("");
        cboHora2.setSelectedItem("");
        a.setEnabled(visibilidad);
        de.setEnabled(visibilidad);
        btnAgregar.setEnabled(visibilidad);
        btnQuitar.setEnabled(visibilidad);
    }

    public void limitesDiasIngreso(boolean visibilidad) { // Éste método permite activar y desactivar los controles de los radio botones (si y no)
        cLunes.setEnabled(visibilidad);
        cMartes.setEnabled(visibilidad);
        cMiercoles.setEnabled(visibilidad);
        cJueves.setEnabled(visibilidad);
        cViernes.setEnabled(visibilidad);
        cSabado.setEnabled(visibilidad);
        cDomingo.setEnabled(visibilidad);
    }

    public void limitesDiasIngresoInvisble(boolean visibilidad) { // Éste método permite activar y desactivar los controles de los radio botones (si y no)
        cLunes.setSelected(visibilidad);
        cMartes.setSelected(visibilidad);
        cMiercoles.setSelected(visibilidad);
        cJueves.setSelected(visibilidad);
        cViernes.setSelected(visibilidad);
        cSabado.setSelected(visibilidad);
        cDomingo.setSelected(visibilidad);
    }

    public void sumarMes() {
        Calendar calendar = Calendar.getInstance();
        jdExpiracion.setCalendar(Calendar.getInstance());
        Date fecha1 = jdExpiracion.getDate();
        calendar.setTime(fecha1);
        calendar.add(calendar.MONTH, 1);
        jdExpiracion.setDate(calendar.getTime());
    }

    public int tipoPuerta() throws SQLException {
        CachedRowSet data;
        data = db.sqlDatos("SELECT tipo_puerta FROM empresa;");
        String tipoPuerta = "";
        int cantidadEntradas = -1;

        while (data.next()) {
            tipoPuerta = data.getString("tipo_puerta");
        }
        if (tipoPuerta == null) {
            JOptionPane.showMessageDialog(this, "No se ha parametrizado el tipo de puerta.\nPara solucionarlo diríjase en el menú superior a:\nAdministración>Administrar Puerta", "Falta Información", JOptionPane.ERROR_MESSAGE);
            return -1;
        }

        switch (tipoPuerta) {
            case "cantonera":
                cantidadEntradas = 2;
                break;
            case "torniquete":
                cantidadEntradas = 1;
                break;
        }
        return cantidadEntradas;
    }

    public void traerDatos(String id) {
        int limiteDias;
        int diaIngreso;
        CachedRowSet data;
        cboUnidad.setEnabled(false);
        cboDuracion.setEnabled(false);
        rNo1.setEnabled(false);
        rSi1.setEnabled(false);
        rbCantidadDias.setEnabled(false);
        rNo2.setEnabled(false);
        rsi2.setEnabled(false);
        rSi3.setEnabled(false);
        rNo3.setEnabled(false);
        jdExpiracion.setEnabled(false);

        querySQL = String.format("SELECT mem.estado,mem.nombre,mem.estado,mem.valor,mem.asistencia_diaria,\n"
                + "	dura.duracion,dura.unidad,\n"
                + "	promo.fecha_expiracion,\n"
                + "	reho.hora_inicio,reho.hora_fin,\n"
                + "	rese.cantidad_dias,rese.lun,rese.mar,rese.mie,rese.jue,rese.vie,rese.sab\n"
                + "FROM membresia mem\n"
                + "LEFT OUTER JOIN membresia_promocional promo ON promo.membresia_id=mem.id\n"
                + "LEFT OUTER JOIN membresia_duracion dura ON dura.membresia_id = mem.id\n"
                + "LEFT OUTER JOIN membresia_restriccion_horario reho ON reho.membresia_id = mem.id\n"
                + "LEFT OUTER JOIN membresia_restriccion_semana rese ON rese.membresia_id = mem.id\n"
                + "WHERE mem.id= %s;", id);
        data = db.sqlDatos(querySQL);
        try {
            while (data.next()) {
                estadoBD = data.getBoolean("estado");
                if (data.getBoolean("estado") == false) {
                    cbActivar.setVisible(true);
                    cbActivar.setText("Activar");
                }
                txtNombreMembresia.setText(data.getString("nombre"));
                txtValor.setText(data.getString("valor"));
                cboDuracion.setSelectedItem(data.getInt("duracion"));
                cboUnidad.setSelectedItem(data.getString("unidad"));
                limiteDias = data.getInt("asistencia_diaria") / 2;
                if (limiteDias > 0) {
                    rSi.setSelected(true);
                    cboLimiteDias.setEnabled(true);
                    cboLimiteDias.setSelectedItem(limiteDias);
                } else {
                    rNo.setSelected(true);
                }
                diaIngreso = data.getInt("cantidad_dias");
                if (diaIngreso > 0) {
                    rbCantidadDias.setSelected(true);
                    txtCantidadDias.setText(String.valueOf(diaIngreso));
                } else if ((data.getBoolean("lun")) || (data.getBoolean("mar")) || (data.getBoolean("mie")) || (data.getBoolean("jue")) || (data.getBoolean("vie")) || (data.getBoolean("sab"))) {
                    rNo1.setSelected(false);
                    rSi1.setSelected(false);
                    limitesDiasIngreso(false);
                    cLunes.setSelected(data.getBoolean("lun"));
                    cMartes.setSelected(data.getBoolean("mar"));
                    cMiercoles.setSelected(data.getBoolean("mie"));
                    cJueves.setSelected(data.getBoolean("jue"));
                    cViernes.setSelected(data.getBoolean("vie"));
                    cSabado.setSelected(data.getBoolean("sab"));
                } else {
                    rNo1.setSelected(true);
                }

                String horaArracanca = data.getString("hora_inicio");
                String horaFinaliza = data.getString("hora_fin");
                String concatena = horaArracanca + "-" + horaFinaliza;
                if ((horaArracanca != null && horaFinaliza != null)) {
                    rsi2.setSelected(true);
                    modelo.addElement(concatena);
                    jLista.setModel(modelo);
                } else {
                    rNo2.setSelected(true);
                }
                Date fechaExpiracion = data.getDate("fecha_expiracion");
                if (fechaExpiracion != null) {
                    rSi3.setSelected(true);
                    jdExpiracion.setVisible(true);
                    jdExpiracion.setDate(fechaExpiracion);
                } else {
                    rNo3.setSelected(true);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarPagoMembresia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
