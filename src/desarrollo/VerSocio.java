package desarrollo;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sql.rowset.CachedRowSet;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import logica.DB;
import logica.PlaceHolder;
import logica.Utilidades;
import net.sf.jcarrierpigeon.WindowPosition;
import net.sf.jtelegraph.Telegraph;
import net.sf.jtelegraph.TelegraphQueue;
import net.sf.jtelegraph.TelegraphType;
import puerta.PuertaArduino;

/**
 *
 * @author GID
 */
public class VerSocio extends javax.swing.JInternalFrame {

    DefaultTableModel dtmEjemplo;
    private final DB db = new DB();
    private final AdministrarMembresia admonMembresias = new AdministrarMembresia();
    Utilidades utilidades = new Utilidades();
    private final int socioID;
    //Variable que indica si usuario debe dinero
    private boolean usuarioDebe = false;
    int cajaActual;
    String fechaFin;
    String seleccion;
    double saldo;
    puerta.Puerta arduino;

    /**
     * Creates new form internalEjemplo
     *
     * @param socioID
     * @throws java.sql.SQLException
     * @throws java.text.ParseException
     */
    public VerSocio(int socioID) throws SQLException, ParseException {

        initComponents();
        this.socioID = socioID;
        getSocio();
        getUltimosPagos();
        getMembresiasActivas();
        getEstadoCuenta();
        getUltimasVisitas(tablaUltimasEntradas, 5);
        getUltimasVisitas(jTable6, 60);
        getVencimientoMembresias();
        jTabbedPane1.setEnabledAt(1, true);
        jTabbedPane1.setEnabledAt(2, true);
        jTabbedPane1.setEnabledAt(3, false);
        jTabbedPane1.setEnabledAt(4, false);
        
        initRegistrarVisita();
        /*Ver Facturas cliente*/
        obtenerFacturas(socioID);
        
        new PlaceHolder("Filtrar Facturas ...", txtBuscar);
        if(!utilidades.socioActivo(socioID)){
            System.out.println("skdskd");
            bEliminarMembresia.setEnabled(false);
            bAgregarMembresias.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lNombreUsuario = new javax.swing.JLabel();
        lCodigo = new javax.swing.JLabel();
        lmsjVencimiento = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lEstadoCuentaDescripcion = new javax.swing.JLabel();
        bRegistrarPago = new javax.swing.JButton();
        lblFoto = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnRegistrarEntrada = new javax.swing.JButton();
        bAgregarMembresias = new javax.swing.JButton();
        btnEditarSocio = new javax.swing.JButton();
        bEliminarMembresia = new javax.swing.JButton();
        lEdad = new javax.swing.JLabel();
        bRegistrarVisita = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUltimosPagos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaUltimasEntradas = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaMembresias = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtFactura = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Ver Socio");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        lNombreUsuario.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lNombreUsuario.setText("Pepito Perez Pingüino");

        lCodigo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lCodigo.setText("Codigo: 0000");

        lmsjVencimiento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lmsjVencimiento.setText("Membresía Vence en:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Estado de la cuenta: ");

        lEstadoCuentaDescripcion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lEstadoCuentaDescripcion.setForeground(new java.awt.Color(255, 0, 0));
        lEstadoCuentaDescripcion.setText("Debe  32.000 Pesos");

        bRegistrarPago.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/moneda.png"))); // NOI18N
        bRegistrarPago.setText("Pagar");
        bRegistrarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegistrarPagoActionPerformed(evt);
            }
        });

        lblFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/sin_foto.png"))); // NOI18N
        lblFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Ultimas Entradas");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Membresías");

        btnRegistrarEntrada.setBackground(new java.awt.Color(0, 102, 0));
        btnRegistrarEntrada.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrarEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/agregar pequeno.png"))); // NOI18N
        btnRegistrarEntrada.setText("Registrar Entrada");
        btnRegistrarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarEntradaActionPerformed(evt);
            }
        });

        bAgregarMembresias.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/agregar pequeno.png"))); // NOI18N
        bAgregarMembresias.setText("Agregar");
        bAgregarMembresias.setPreferredSize(new java.awt.Dimension(141, 29));
        bAgregarMembresias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarMembresiasActionPerformed(evt);
            }
        });

        btnEditarSocio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/editar.png"))); // NOI18N
        btnEditarSocio.setText("Editar Socio");
        btnEditarSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarSocioActionPerformed(evt);
            }
        });

        bEliminarMembresia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/dialog_error.png"))); // NOI18N
        bEliminarMembresia.setText("Quitar membresía");
        bEliminarMembresia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarMembresiaActionPerformed(evt);
            }
        });

        lEdad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lEdad.setText("20 años");

        bRegistrarVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/agregar pequeno.png"))); // NOI18N
        bRegistrarVisita.setText("Registrar Visita");
        bRegistrarVisita.setMaximumSize(new java.awt.Dimension(184, 30));
        bRegistrarVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegistrarVisitaActionPerformed(evt);
            }
        });

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tablaUltimosPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaUltimosPagos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUltimosPagosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaUltimosPagos);

        jTabbedPane2.addTab("Ultimos Pagos", jScrollPane1);

        tablaUltimasEntradas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaUltimasEntradas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUltimasEntradasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaUltimasEntradas);

        jTabbedPane2.addTab("Ultimas Entradas", jScrollPane2);

        tablaMembresias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaMembresias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMembresiasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaMembresias);

        jTabbedPane2.addTab("Membresías", jScrollPane3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lEstadoCuentaDescripcion)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                                        .addComponent(bRegistrarPago, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(lCodigo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(lEdad)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(lNombreUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnEditarSocio)))
                                .addContainerGap(80, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lmsjVencimiento)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTabbedPane2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(bRegistrarVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnRegistrarEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(bEliminarMembresia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bAgregarMembresias, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addGap(130, 130, 130)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lNombreUsuario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lCodigo)
                                    .addComponent(lEdad)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnEditarSocio, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lmsjVencimiento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bRegistrarPago, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lEstadoCuentaDescripcion))))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bRegistrarVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrarEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bEliminarMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bAgregarMembresias, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Información Básica", jPanel1);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable6MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTable6);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel17.setText("Entradas");

        jLabel18.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel18.setText("Registro de entradas del cliente.");

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/Person-add-black-32.png"))); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(541, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addGap(61, 61, 61))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(579, 579, 579)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(352, 352, 352))
        );

        jTabbedPane1.addTab("Entradas", jPanel7);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel20.setText("Historico Facturas");

        jLabel21.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel21.setText("Facturas Impresas por Socio");

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/hoja.png"))); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(472, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addGap(61, 61, 61))
        );

        jtFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COD FACTURA", "FECHA FACTURA", "DETALLE FACTURA", "VALOR"
            }
        ));
        jtFactura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtFacturaMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jtFactura);

        txtBuscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtBuscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarFocusLost(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(193, 193, 193))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Facturas", jPanel12);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/agregar.png"))); // NOI18N
        jButton2.setText("Agregar");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/caneco.png"))); // NOI18N
        jButton4.setText("Eliminar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/editar.png"))); // NOI18N
        jButton3.setText("Editar");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("Membresías");

        jLabel12.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel12.setText("Planes o membresías del socio.");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/hoja.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4))
                    .addComponent(jLabel12))
                .addGap(36, 36, 36))
        );

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addGap(4, 4, 4))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Membresías", jPanel3);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/agregar.png"))); // NOI18N
        jButton5.setText("Agregar");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/caneco.png"))); // NOI18N
        jButton6.setText("Eliminar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/editar.png"))); // NOI18N
        jButton7.setText("Editar");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setText("Pagos");

        jLabel15.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel15.setText("Pagos realizados por el socio.");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/moneda.png"))); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6))
                    .addComponent(jLabel15))
                .addGap(36, 36, 36))
        );

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 186, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Pagos", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void bAgregarMembresiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarMembresiasActionPerformed
        try {
            AgregarMembresia miAgregarMembresia = new AgregarMembresia(socioID, this);
            miAgregarMembresia.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(VerSocio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bAgregarMembresiasActionPerformed

    private void bRegistrarPagoActionPerformed(java.awt.event.ActionEvent evt) {
        RegistrarPagoMembresia pago = new RegistrarPagoMembresia(socioID, this);
        pago.setVisible(true);
        pago.setLocationRelativeTo(null);
        pago.setAlwaysOnTop(true);

    }

    private void btnRegistrarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarEntradaActionPerformed
        try {
            RegistrarEntrada registrarEntrada = new RegistrarEntrada(socioID, this);
            arduino = new puerta.Puerta();
            arduino.openDoor();
        } catch (ParseException | SQLException ex) {
            Logger.getLogger(VerSocio.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnRegistrarEntradaActionPerformed

    private void btnEditarSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarSocioActionPerformed
            CrearSocio crearSocio = new CrearSocio(socioID, this);
            Frame.escritorio.add(crearSocio);
            crearSocio.toFront();
            crearSocio.setVisible(true);
    }//GEN-LAST:event_btnEditarSocioActionPerformed

    private void bEliminarMembresiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarMembresiaActionPerformed
        // Nos damos cuenta que membresia fue seleccionada para eliminar
        if (tablaMembresias.getSelectedRow() >= 0) {

            try {
                seleccion = admonMembresias.obtenerIdMembresia(tablaMembresias);
                System.out.println("seleccion = " + seleccion);
                fechaFin = obtenerFechaFinMembresia(tablaMembresias);
                System.out.println("fechaFin = " + fechaFin);

                // Id de la adquisicion usuario-membresia
                int membresia_id = traerIdMembresiaAdquirida(fechaFin);
                System.out.println("membresia_id = " + membresia_id);

                // verificar que la membresía seleccionada está activa.
                String consultaMembresiaSeleccionadaEstaActiva = String.format("SELECT activa from membresia_usuario where id=%s;", membresia_id);
                ResultSet rs2 = db.sqlDatos(consultaMembresiaSeleccionadaEstaActiva);
                boolean activa = false;
                if (rs2.next()) {
                    activa = rs2.getBoolean(1);
                }

                if (!activa) {
                    Telegraph tele = new Telegraph("Eliminar Membresia", "Esta membresía no puede ser eliminada. Ya fue utilizada.", TelegraphType.NOTIFICATION_ERROR, WindowPosition.TOPRIGHT, 5000);
                    TelegraphQueue q = new TelegraphQueue();
                    q.add(tele);

                } else {
                    String consultaMembresiaPago_id = String.format("SELECT id as identificador FROM membresia_datos WHERE membresia_socio_id=%s", membresia_id);
                    ResultSet rs3 = db.sqlDatos(consultaMembresiaPago_id);
                    int identificador = 0;
                    if (rs3.next()) {
                        identificador = rs3.getInt("identificador");
                        System.out.println("identificador = " + identificador);
                    }
                    String consultaCuandoHaPagado = String.format("SELECT saldo FROM pago_membresia where membresiadatos_id =%s ORDER BY fecha_registro DESC limit 1;", identificador);
                    ResultSet rs4 = db.sqlDatos(consultaCuandoHaPagado);
                    double saldoMembresia = 0.0;
                    if (rs4.next()) {
                        // esta consulta permite saber cuanto se ha pagado por una membresía.
                        saldoMembresia = rs4.getDouble("saldo");
                        System.out.println("saldoMembresia = " + saldoMembresia);
                    }

                    if (saldoMembresia == 0.0) {
                        System.out.println("El usuario ya pagó esta membresía o es gratuita.");

                        String cosultaValorMembresia = String.format("SELECT saldo as consulta FROM pago_membresia WHERE socio_id=%s and membresiadatos_id=%s", socioID, identificador);
                        abonandoSaldoSocio(cosultaValorMembresia, identificador);

                    } else if (saldoMembresia != 0) {
                        System.out.println("El usuario abonó a la membresía o no la ha pagado.");

                        String consultaValorAbonado = String.format("SELECT pago as consulta FROM pago_membresia WHERE socio_id=%s and membresiadatos_id=%s ORDER BY id DESC", socioID, identificador);
                        abonandoSaldoSocio(consultaValorAbonado, identificador);
                    }

                }
            } catch (SQLException ex) {
                Logger.getLogger(VerSocio.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            Telegraph tele = new Telegraph("Eliminar Membresia", "No ha seleccionado ninguna membresía.", TelegraphType.NOTIFICATION_ERROR, WindowPosition.TOPRIGHT, 5000);
            TelegraphQueue q = new TelegraphQueue();
            q.add(tele);
        }

    }//GEN-LAST:event_bEliminarMembresiaActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        // TODO add your handling code here:
        if (txtBuscar.getText().length() >= 0) {
            TableRowSorter sorter = new TableRowSorter(dtmEjemplo);
            sorter.setRowFilter(RowFilter.regexFilter(".*" + txtBuscar.getText().trim() + ".*"));
            jtFactura.setRowSorter(sorter);
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void jtFacturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtFacturaMouseClicked
        if (evt.getClickCount() == 1) {
            int row = jtFactura.rowAtPoint(evt.getPoint());
            int id = Integer.valueOf(jtFactura.getValueAt(row, 0).toString());
            ImprimirRecibo imprimirRecibo = new ImprimirRecibo(id);
            Frame.escritorio.add(imprimirRecibo);
            imprimirRecibo.toFront();
            imprimirRecibo.setVisible(true);
            Utilidades.centrarInternalFrame(imprimirRecibo);
        }
    }//GEN-LAST:event_jtFacturaMouseClicked

    private void txtBuscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarFocusLost

    }//GEN-LAST:event_txtBuscarFocusLost

    private void tablaUltimosPagosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUltimosPagosMouseClicked
        if (evt.getClickCount() == 1) {
            int row = tablaUltimosPagos.rowAtPoint(evt.getPoint());
            utilidades.construirFormulario(tablaUltimosPagos, row, "Detalle Pago");
        }
    }//GEN-LAST:event_tablaUltimosPagosMouseClicked

    private void tablaUltimasEntradasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUltimasEntradasMouseClicked
        if (evt.getClickCount() == 1) {
            int row = tablaUltimasEntradas.rowAtPoint(evt.getPoint());
            utilidades.construirFormulario(tablaUltimasEntradas, row, "Detalle Ultimas Entradas");
        }
    }//GEN-LAST:event_tablaUltimasEntradasMouseClicked

    private void tablaMembresiasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMembresiasMouseClicked
        if (evt.getClickCount() == 1) {
            int row = tablaMembresias.rowAtPoint(evt.getPoint());
            utilidades.construirFormulario(tablaMembresias, row, "Detalle Membresias Adquiridas");
        }
    }//GEN-LAST:event_tablaMembresiasMouseClicked

    private void bRegistrarVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegistrarVisitaActionPerformed
        try {
            RegistrarVisita rg = new RegistrarVisita(getDatosSocio()[0], getDatosSocio()[1], getDatosSocio()[2], getDatosSocio()[3],getDatosSocio()[4],getDatosSocio()[5]);
            Frame.escritorio.add(rg);
            rg.toFront();
            Utilidades.centrarInternalFrame(rg);
            rg.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(VerSocio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bRegistrarVisitaActionPerformed

    private void jTable6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable6MouseClicked
        if (evt.getClickCount() == 1) {
            int row = tablaUltimasEntradas.rowAtPoint(evt.getPoint());
            utilidades.construirFormulario(tablaUltimasEntradas, row, "Detalle Ultimas Entradas");
        }
    }//GEN-LAST:event_jTable6MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAgregarMembresias;
    private javax.swing.JButton bEliminarMembresia;
    private javax.swing.JButton bRegistrarPago;
    private javax.swing.JButton bRegistrarVisita;
    private javax.swing.JButton btnEditarSocio;
    private javax.swing.JButton btnRegistrarEntrada;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jtFactura;
    private javax.swing.JLabel lCodigo;
    private javax.swing.JLabel lEdad;
    private javax.swing.JLabel lEstadoCuentaDescripcion;
    private javax.swing.JLabel lNombreUsuario;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lmsjVencimiento;
    private javax.swing.JTable tablaMembresias;
    private javax.swing.JTable tablaUltimasEntradas;
    private javax.swing.JTable tablaUltimosPagos;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

    public int membresia_id() throws SQLException {
        int membresia_id = 0;
        CachedRowSet data;
        DB db = new DB();
        String Sql = String.format("SELECT mu.membresia_id FROM membresia_usuario mu where mu.socio_id=%s", socioID);
        data = db.sqlDatos(Sql);
        while (data.next()) {
            try {
                membresia_id = data.getInt("membresia_id");
            } catch (SQLException ex) {
                Logger.getLogger(RegistrarEntrada.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return membresia_id;
    }

    public int traerIdMembresiaAdquirida(String fechaFin) throws SQLException {
        CachedRowSet data;
        int id = 0;
        String consulta = String.format("SELECT membresia_usuario.id"
                + "                      FROM membresia_usuario, membresia_datos "
                + "                      WHERE socio_id=%s and membresia_id=%s and membresia_usuario.id = membresia_datos.membresia_socio_id and membresia_datos.fecha_fin_membresia='%s' ; ", socioID, seleccion, fechaFin);
        data = new DB().sqlDatos(consulta);
        while (data.next()) {
            try {
                id = data.getInt("id");
            } catch (SQLException ex) {
                Logger.getLogger(RegistrarEntrada.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return id;
    }

    public void updateDatos() {
        getSocio();
        getUltimosPagos();
        getMembresiasActivas();
        getUltimasVisitas(tablaUltimasEntradas, 5);
        getVencimientoMembresias();
        getEstadoCuenta();
        obtenerFacturas(socioID);

    }

    private void getSocio() {
        try {
            CachedRowSet data;
            data = db.sqlDatos("SELECT foto,REPLACE(concat(soc.primer_nombre,' ',soc.segundo_nombre,' ',soc.primer_apellido,' ',soc.segundo_apellido),'  ',' ') as Usuario, EXTRACT(year FROM AGE(NOW(),soc.fecha_nacimiento))::text || ' Años' edad , soc.sexo ,soc.clave FROM socio soc WHERE soc.id = " + socioID);

            while (data.next()) {
                if (data.getBytes("foto") != null) {
                    ImageIcon foto = new ImageIcon(data.getBytes("foto"));
                    lblFoto.setIcon(foto);
                }
                switch (data.getString("sexo")) {
                    case "Masculino":

                        lblFoto.setBorder(null);
                        break;
                    case "Femenino":
                        lblFoto.setBorder(null);
                        break;
                }

                lNombreUsuario.setText(data.getString("usuario"));
                lCodigo.setText("Código: " + data.getString("clave"));
                lEdad.setText(data.getString("edad"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(VerSocio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getUltimosPagos() {
        CachedRowSet data;
        try {

            DefaultTableModel dtmEjemplo = new DefaultTableModel(null, new String[]{"Cod. Pago", "Fecha Pago", "Hora Pago", "Valor Pagado", "Valor Restante", "Tipo Pago", "Membresia", "Quien recibe"});
            //SELECT m.id, pago.id as \"Codigo Pago\", pago.fecha_pago::date as \"Fecha Pago\" , to_char(pago.fecha_pago, 'HH12:MI:SS AM') as \"Hora Pago\"  , pago.pago as \"Valor Pagado\" , pago.saldo as \"Valor Restante\", pago.usuario_sistema_id as \"Quien Recibe\" FROM pago_membresia pago, membresia m WHERE pago.socio_id = " + socioID + " AND pago.pago <> 0 ORDER BY id DESC LIMIT 5
            data = db.sqlDatos("SELECT pago.id as \"Cod. Pago\" ,  pago.fecha_pago::date as \"Fecha Pago\" , to_char(pago.fecha_pago, 'HH12:MI:SS AM') as \"Hora Pago\" ,translate(to_char(pago.pago, '$99,999'),' ','') as \"Valor Pagado\" , translate(to_char(pago.saldo, '$99,999'),' ','') as \"Valor Restante\" , CASE WHEN pago.saldo = 0 THEN 'Pagada' WHEN pago.saldo > 0 THEN 'Abono'::text END AS \"Tipo Pago\" ,  CONCAT(mem.nombre,'(',memdatos.fecha_inicio_membresia,'/',memdatos.fecha_fin_membresia,')') as \"Membresia\" , CONCAT(usuariosis.primer_nombre , ' ' , usuariosis.segundo_nombre) AS \"Quien recibe\"\n"
                    + "FROM  pago_membresia pago , membresia_datos memdatos , usuario_sistema usuariosis , membresia_usuario memusuario , membresia mem\n"
                    + "WHERE pago.membresiadatos_id = memdatos.id AND  pago.usuario_sistema_id = usuariosis.id AND memdatos.membresia_socio_id = memusuario.id AND memusuario.membresia_id = mem.id AND \n"
                    + "pago.socio_id = " + socioID + " AND pago.factura_id IS NOT NULL ORDER BY pago.id DESC LIMIT 5");

            tablaUltimosPagos = logica.Utilidades.llenarTabla(data.createCopy(), dtmEjemplo, tablaUltimosPagos);

        } catch (Exception ex) {
            Logger.getLogger(RegistrarPagoMembresia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getMembresiasActivas() {
        CachedRowSet data;
        try {

            dtmEjemplo = new DefaultTableModel(null, new String[]{"Cod.","Membresia", "Comienza", "Termina", "Estado"});
            data = db.sqlDatos("SELECT mem.id , mem.nombre as \"Membresia\" , mendatos.fecha_inicio_membresia as \"Comienza\" , mendatos.fecha_fin_membresia as \"Termina\", mendatos.estado as \"Estado\", CASE WHEN mendatos.renovar = true Then 'Si' WHEN mendatos.renovar = false Then 'No' END AS \"Renueva\" FROM membresia mem , membresia_usuario memusu , socio s , membresia_datos mendatos\n"
                    + "WHERE  mem.id = memusu.membresia_id AND s.id = memusu.socio_id AND memusu.id = mendatos.membresia_socio_id AND memusu.socio_id = " + socioID + "ORDER BY mendatos.fecha_fin_membresia DESC ");

            tablaMembresias = logica.Utilidades.llenarTabla(data.createCopy(), dtmEjemplo, tablaMembresias);

        } catch (Exception ex) {
            Logger.getLogger(RegistrarPagoMembresia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getEstadoCuenta() {
        double saldoPendiente = 0;
        String msjEstado = "";
        try {
            saldoPendiente = utilidades.obtenerSaldoUsuario(socioID);
            if (saldoPendiente == 0) {
                bRegistrarPago.setVisible(false);
                usuarioDebe = false;
                lEstadoCuentaDescripcion.setForeground(new java.awt.Color(0, 102, 0));
                msjEstado = "Usuario esta a Paz y Salvo";
            } else {
                bRegistrarPago.setVisible(true);
                usuarioDebe = true;
                lEstadoCuentaDescripcion.setForeground(new java.awt.Color(255, 0, 0));
                msjEstado = String.format("Debe %s Pesos", saldoPendiente);

            }

            lEstadoCuentaDescripcion.setText(msjEstado);

        } catch (Exception ex) {
            Logger.getLogger(RegistrarPagoMembresia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getUltimasVisitas(JTable nombreTabla, int limit) {
        CachedRowSet data;
        try {

            DefaultTableModel dtmEjemplo = new DefaultTableModel(null, new String[]{"Codigo", "Fecha", "Hora", "Membresia"});
            data = db.sqlDatos("SELECT entrada.id, entrada.fecha_hora::date as \"Fecha\" , to_char(entrada.fecha_hora, 'HH12:MI:SS AM') as \"Hora\", mem.nombre , REPLACE(concat(s.primer_nombre,' ',s.segundo_nombre,' ',s.primer_apellido,' ',s.segundo_apellido),'  ',' ') as Usuario FROM entrada_socio entrada , socio s , membresia mem\n" +
"WHERE entrada.socio_id = s.id AND entrada.membresia_id = mem.id AND socio_id = "+socioID+" \n" +
"UNION\n" +
"SELECT visita.id , visita.fecha_registro::date as \"Fecha\" , to_char(visita.fecha_registro, 'HH12:MI:SS AM') as \"Hora\" , 'VISITA' , visita.nombres||' '||visita.apellidos FROM pago_visita visita WHERE visita.socio_id = "+socioID+" \n" +
"ORDER BY \"Fecha\" DESC LIMIT "+limit);

            nombreTabla = logica.Utilidades.llenarTabla(data.createCopy(), dtmEjemplo, nombreTabla);
            System.out.println(nombreTabla);
            System.out.println(data.createCopy());
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarPagoMembresia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getVencimientoMembresias() {
        try {
            int dias = 0;
            Date fechaVencimiento = new Date();
            CachedRowSet data;
            String sql = "SELECT mendatos.fecha_fin_membresia - now()::date as dias  , mendatos.fecha_fin_membresia as fecha_vencimiento FROM membresia mem , membresia_usuario memusu , socio s , membresia_datos mendatos\n"
                    + "WHERE  mem.id = memusu.membresia_id AND s.id = memusu.socio_id AND memusu.id = mendatos.membresia_socio_id AND mendatos.estado = 'Pagada' AND memusu.socio_id = " + socioID + " ORDER BY memusu.id DESC LIMIT 1";

            data = db.sqlDatos(sql);

            if (data.size() == 0) {
                lmsjVencimiento.setText("Socio no reporta Membresias Activas");
                //btnRegistrarEntrada.setVisible(false);
                bAgregarMembresias.setEnabled(true);
                return;
            }

            btnRegistrarEntrada.setEnabled(true);
            //bAgregarMembresias.setEnabled(false);

            //****
            while (data.next()) {
                dias = data.getInt("dias");
                fechaVencimiento = data.getDate("fecha_vencimiento");
            }

            String msj = " ";
            String fecha = Utilidades.castFecha(fechaVencimiento, "dd/MM/yyyy");

            if (dias == 0) {
                msj = "La membresia del Usuario Vence Hoy";
                utilidades.resaltarTexto(lmsjVencimiento, "naranja");
            } else if (dias < 0) {
                dias = dias * -1;
                msj = String.format("Membresia Vencida hace %s días (%s)", dias, fecha);
                utilidades.resaltarTexto(lmsjVencimiento, "rojo");
            } else {
                msj = String.format("Membresía Vence en: %s (%s Días)", fecha, dias);
                utilidades.resaltarTexto(lmsjVencimiento, "verde");
            }
            lmsjVencimiento.setText(msj);
        } catch (SQLException ex) {
            Logger.getLogger(VerSocio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /*Carga la tabla de facturas*/
    public void obtenerFacturas(int SocioId) {
        CachedRowSet data;
        String querySql;
        try {
            dtmEjemplo = new DefaultTableModel(null, new String[]{"Codigo", "Fecha", "Descripcion", "Valor"});
            querySql = String.format("SELECT fac.id,fac.fecha_registro::DATE,CONCAT(CASE WHEN pm.saldo = 0 THEN 'Pago' WHEN pm.saldo > 0 THEN 'Abono'::text END ||' Membresia '||m.nombre||' '||pm.pago||' ( '||md.fecha_inicio_membresia||'/'||md.fecha_fin_membresia||' )'),fac.paga\n"
                    + "FROM pago_membresia pm , factura fac, socio s, membresia m,membresia_datos md,membresia_usuario mu\n"
                    + "WHERE s.id = %s\n"
                    + "AND s.id = pm.socio_id\n"
                    + "AND md.id = pm.membresiadatos_id\n"
                    + "AND fac.id = pm.factura_id\n"
                    + "AND s.id = fac.socio_id\n"
                    + "AND m.id = mu.membresia_id\n"
                    + "AND s.id = mu.socio_id\n"
                    + "AND md.id = pm.membresiadatos_id\n"
                    + "AND md.membresia_socio_id = mu.id;", SocioId);

            data = db.sqlDatos(querySql);
            jtFactura = logica.Utilidades.llenarTabla(data.createCopy(), dtmEjemplo, jtFactura);
        } catch (Exception ex) {
            Logger.getLogger(RegistrarPagoMembresia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public String obtenerFechaFinMembresia(JTable tabla) {
        int fila = tabla.getSelectedRow();
        String fechaFin = null;
        if (fila >= 0) {
            fechaFin = String.valueOf(tabla.getModel().getValueAt(fila, 3));

        }
        return fechaFin;
    }

    public boolean abonandoSaldoSocio(String consulta, int identificador) {
        try {
            double saldoMembresia = 0.0;
            ResultSet rs5 = db.sqlDatos(consulta);

            if (rs5.next()) {
                saldoMembresia = rs5.getDouble("consulta");

            }
            
            //Obtener el saldo anterior a favor que tiene el socio antes de la devolucion
            Double nuevoSaldoFavor = saldoMembresia + utilidades.obtenerSaldoAFavor(socioID);
            
            //consultamos cual es la caja actual
            cajaActual = utilidades.cajaActual();
            // devolvemos el dinero al usuario para eliminarle la membresía.
            String consultaDevolverDinero = String.format("INSERT INTO saldofavor (caja_id, socio_id, valor, fecha_registro, usuario_sistema_id,valor_caja) VALUES (%s, %s, %s, now(), %s,%s); ", cajaActual, socioID, nuevoSaldoFavor, System.getProperty("usuario_sistema"),saldoMembresia);
            Boolean success = db.sqlEjec(consultaDevolverDinero);
            if (success) {
                System.out.println("Abono a saldo a favor Exitoso");
//                            si se abonó exitosamente el saldo a favor pasamos a eliminar la membresía.
                String consultaEliminar1 = String.format("DELETE FROM pago_membresia WHERE membresiadatos_id=%s", identificador);
                db.sqlEjec(consultaEliminar1);
                String consultaEliminar2 = String.format("DELETE FROM membresia_datos WHERE id=%s", identificador);
                db.sqlEjec(consultaEliminar2);
                String consultaEliminar3 = String.format("DELETE FROM membresia_usuario WHERE socio_id=%s and membresia_id=%s and activa=TRUE", socioID, seleccion);
                db.sqlEjec(consultaEliminar3);
                updateDatos();

                if (saldoMembresia == 0.0) {
                    Telegraph tele = new Telegraph("Eliminar Membresia", "Se ha eliminado la membresía exitosamente.", TelegraphType.NOTIFICATION_DONE, WindowPosition.TOPRIGHT, 5000);
                    TelegraphQueue q = new TelegraphQueue();
                    q.add(tele);
                    return true;
                } else {
                    Telegraph tele = new Telegraph("Eliminar Membresia", "La membresía ha sido eliminada. El usuario ahora tiene " + "<b>" + nuevoSaldoFavor + "</b>" + " de saldo a favor.", TelegraphType.NOTIFICATION_DONE, WindowPosition.TOPRIGHT, 5000);
                    TelegraphQueue q = new TelegraphQueue();
                    q.add(tele);
                    return true;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(VerSocio.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    private void initRegistrarVisita() {
        if (!sinMembresias()) {
            bRegistrarVisita.setEnabled(true);
        } else {
            bRegistrarVisita.setEnabled(false);
        }
    }

    private String[] getDatosSocio() throws SQLException {
        String[] socio = new String[6];
        CachedRowSet data;
        data = db.sqlDatos("SELECT primer_nombre, segundo_nombre, primer_apellido, segundo_apellido,id,clave FROM SOCIO WHERE id=" + socioID + ";");

        while (data.next()) { 
            socio[0] = data.getString("primer_nombre");
            socio[1] = data.getString("segundo_nombre");
            socio[2] = data.getString("primer_apellido");
            socio[3] = data.getString("segundo_apellido");
            socio[4] = data.getString("id");
            socio[5] = data.getString("clave");
        }
        return socio;
    }

    private boolean sinMembresias() {
        int id = 0;
        try {
            CachedRowSet data;
            String sql = String.format("SELECT count(mu.membresia_id) as cantidad FROM membresia_datos md, membresia_usuario mu where now() between md.fecha_inicio_membresia and md.fecha_fin_membresia and md.membresia_socio_id= mu.id  and mu.socio_id=%s", this.socioID);
            data = db.sqlDatos(sql);
            while (data.next()) {
                id = data.getInt("cantidad");
            }
            if (id >= 1) {
                return true;
            } else {
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(VerSocio.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }
}
